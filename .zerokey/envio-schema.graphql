# GraphQL Schema for ZeroKeyCI Safe Event Indexing
# Generated by Envio HyperIndex

"""
Safe multisig transaction proposal
"""
type SafeTransaction @entity {
  id: ID!
  safe: String!
  to: String!
  value: BigInt!
  data: Bytes!
  operation: Int!
  safeTxGas: BigInt!
  baseGas: BigInt!
  gasPrice: BigInt!
  gasToken: String!
  refundReceiver: String!
  nonce: BigInt!
  executionDate: BigInt
  submissionDate: BigInt!
  confirmations: [SafeConfirmation!]! @derivedFrom(field: "transaction")
  isExecuted: Boolean!
  isSuccessful: Boolean
  transactionHash: String
  blockNumber: BigInt!
  timestamp: BigInt!

  # ZeroKeyCI specific metadata
  prNumber: String
  commitHash: String
  contractName: String
  deploymentType: String # "deployment" | "upgrade"
}

"""
Confirmation/approval from a Safe owner
"""
type SafeConfirmation @entity {
  id: ID!
  transaction: SafeTransaction!
  owner: String!
  submissionDate: BigInt!
  signature: Bytes!
  signatureType: String!
  transactionHash: String!
  blockNumber: BigInt!
}

"""
Successful transaction execution
"""
type ExecutionSuccess @entity {
  id: ID!
  txHash: String!
  payment: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  safe: String!
  transaction: SafeTransaction
}

"""
Failed transaction execution
"""
type ExecutionFailure @entity {
  id: ID!
  txHash: String!
  payment: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  safe: String!
  transaction: SafeTransaction
  errorReason: String
}

"""
Hash approval event
"""
type HashApproval @entity {
  id: ID!
  approvedHash: String!
  owner: String!
  timestamp: BigInt!
  blockNumber: BigInt!
  safe: String!
}

"""
Safe setup event
"""
type SafeSetup @entity {
  id: ID!
  safe: String!
  initiator: String!
  owners: [String!]!
  threshold: BigInt!
  initializer: String!
  fallbackHandler: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

"""
Proxy creation event (for new Safe deployment tracking)
"""
type ProxyCreation @entity {
  id: ID!
  proxy: String!
  singleton: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

"""
Aggregated statistics for Safe multisig
"""
type SafeStats @entity {
  id: ID! # Safe address
  safe: String!
  totalProposals: BigInt!
  executedProposals: BigInt!
  failedProposals: BigInt!
  pendingProposals: BigInt!
  totalConfirmations: BigInt!
  averageTimeToExecution: BigInt!
  lastActivity: BigInt!

  # ZeroKeyCI specific stats
  totalDeployments: BigInt!
  totalUpgrades: BigInt!
  lastDeployment: BigInt
}

"""
ZeroKeyCI deployment tracking
"""
type ZeroKeyDeployment @entity {
  id: ID!
  safe: String!
  contractName: String!
  contractAddress: String
  deploymentType: String! # "deployment" | "upgrade"
  prNumber: String!
  commitHash: String!
  proposalDate: BigInt!
  executionDate: BigInt
  status: String! # "pending" | "executed" | "failed"
  transaction: SafeTransaction!
  confirmations: [SafeConfirmation!]!

  # Explorer integration
  blockscoutUrl: String

  # Metrics
  timeToFirstConfirmation: BigInt
  timeToExecution: BigInt
  gasUsed: BigInt
}

"""
Owner activity tracking
"""
type OwnerActivity @entity {
  id: ID! # owner address + safe address
  owner: String!
  safe: String!
  totalConfirmations: BigInt!
  lastConfirmation: BigInt
  averageResponseTime: BigInt
}

"""
Query root
"""
type Query {
  # Safe transactions
  safeTransaction(id: ID!): SafeTransaction
  safeTransactions(
    where: SafeTransaction_filter
    orderBy: SafeTransaction_orderBy
    orderDirection: OrderDirection
    first: Int
    skip: Int
  ): [SafeTransaction!]!

  # Executions
  executionSuccess(id: ID!): ExecutionSuccess
  executionSuccesses(
    where: ExecutionSuccess_filter
    orderBy: ExecutionSuccess_orderBy
    orderDirection: OrderDirection
    first: Int
    skip: Int
  ): [ExecutionSuccess!]!

  # Failures
  executionFailure(id: ID!): ExecutionFailure
  executionFailures(
    where: ExecutionFailure_filter
    orderBy: ExecutionFailure_orderBy
    orderDirection: OrderDirection
    first: Int
    skip: Int
  ): [ExecutionFailure!]!

  # Stats
  safeStats(id: ID!): SafeStats
  allSafeStats: [SafeStats!]!

  # ZeroKeyCI specific
  zeroKeyDeployment(id: ID!): ZeroKeyDeployment
  zeroKeyDeployments(
    where: ZeroKeyDeployment_filter
    orderBy: ZeroKeyDeployment_orderBy
    orderDirection: OrderDirection
    first: Int
    skip: Int
  ): [ZeroKeyDeployment!]!

  # Owner activity
  ownerActivity(id: ID!): OwnerActivity
  ownerActivities(
    where: OwnerActivity_filter
    first: Int
    skip: Int
  ): [OwnerActivity!]!
}

# Filter types
input SafeTransaction_filter {
  safe: String
  isExecuted: Boolean
  isSuccessful: Boolean
  contractName: String
  deploymentType: String
}

input ExecutionSuccess_filter {
  safe: String
  timestamp_gt: BigInt
  timestamp_lt: BigInt
}

input ExecutionFailure_filter {
  safe: String
  timestamp_gt: BigInt
  timestamp_lt: BigInt
}

input ZeroKeyDeployment_filter {
  safe: String
  status: String
  deploymentType: String
  contractName: String
}

input OwnerActivity_filter {
  owner: String
  safe: String
}

# Order by types
enum SafeTransaction_orderBy {
  timestamp
  blockNumber
  nonce
  executionDate
}

enum ExecutionSuccess_orderBy {
  timestamp
  blockNumber
}

enum ExecutionFailure_orderBy {
  timestamp
  blockNumber
}

enum ZeroKeyDeployment_orderBy {
  proposalDate
  executionDate
}

enum OrderDirection {
  asc
  desc
}
